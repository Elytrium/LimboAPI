plugins {
  id("java")
  id("com.github.johnrengelman.shadow").version("7.1.2")
}

dependencies {
  implementation(project(":limboapi-api"))

  implementation("net.elytrium:fastprepare:1.0.4")
  compileOnly("com.velocitypowered:velocity-api:3.2.0-SNAPSHOT")
  annotationProcessor("com.velocitypowered:velocity-api:3.2.0-SNAPSHOT")
  compileOnly("com.velocitypowered:velocity-proxy:3.2.0-SNAPSHOT") // From Elytrium Repo.
  compileOnly("com.velocitypowered:velocity-native:3.2.0-SNAPSHOT")

  // Needs for some velocity methods.
  compileOnly('io.netty:netty-codec:4.1.86.Final')
  compileOnly("io.netty:netty-handler:4.1.86.Final")
  compileOnly("it.unimi.dsi:fastutil-core:8.5.8")

  implementation("org.bstats:bstats-velocity:3.0.0")

  compileOnly("com.github.spotbugs:spotbugs-annotations:4.7.0")
}

shadowJar {
  getArchiveClassifier().set(this.getVersion().contains("-") ? getCurrentShortRevision() : "")

  exclude("META-INF/versions/**")
  exclude("net/kyori/**")

  relocate("org.bstats", "net.elytrium.limboapi.thirdparty.org.bstats")
  relocate("net.elytrium.fastprepare", "net.elytrium.limboapi.thirdparty.fastprepare")
}

license {
  matching(includes: ["**/mcprotocollib/**"]) {
    setHeader(getRootProject().file("HEADER_MCPROTOCOLLIB.txt"))
  }
  matching(includes: ["**/LoginListener.java", "**/KickListener.java", "**/LoginTasksQueue.java", "**/MinecraftLimitedCompressDecoder.java"]) {
    setHeader(getRootProject().file("HEADER_MIXED.txt"))
  }

  setHeader(getRootProject().file("HEADER.txt"))
}

task finalize {
  doLast {
    if (this.getVersion().contains("-")) {
      file("build/libs/${this.getName()}-${this.getVersion()}.jar").delete()
    }
  }
}

assemble.dependsOn(shadowJar)
build.finalizedBy(finalize)
